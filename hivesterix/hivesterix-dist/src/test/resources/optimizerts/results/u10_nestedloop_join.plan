write [%0->$$6, %0->$$2, %0->$$5, %0->$$1]
-- SINK_WRITE  |PARTITIONED|
  project ([$$6, $$2, $$5, $$1])
  -- STREAM_PROJECT  |PARTITIONED|
    exchange 
    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
      join (function-call: algebricks:and, Args:[function-call: algebricks:gt, Args:[%0->$$5, %0->$$1], true])
      -- NESTED_LOOP  |PARTITIONED|
        exchange 
        -- BROADCAST_EXCHANGE  |PARTITIONED|
          project ([$$1, $$2])
          -- STREAM_PROJECT  |PARTITIONED|
            assign [$$1, $$2] <- [%0->$$5, %0->$$6]
            -- ASSIGN  |PARTITIONED|
              exchange 
              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                replicate 
                -- SPLIT  |PARTITIONED|
                  exchange 
                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                    data-scan [$$5, $$6]<-[$$5, $$6, $$7, $$8] <- default.nation
                    -- DATASOURCE_SCAN  |PARTITIONED|
                      exchange 
                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                        empty-tuple-source
                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
        exchange 
        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
          replicate 
          -- SPLIT  |PARTITIONED|
            exchange 
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              data-scan [$$5, $$6]<-[$$5, $$6, $$7, $$8] <- default.nation
              -- DATASOURCE_SCAN  |PARTITIONED|
                exchange 
                -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                  empty-tuple-source
                  -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
